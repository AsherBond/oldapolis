upstream unicorn {
  server unix:/tmp/unicorn.<%= application %>.sock fail_timeout=0;
}


server {
    # if you're running multiple servers, instead of "default" you should
    # put your main domain name here
    listen 80;

    # you could put a list of other domain names this application answers

    root <%= current_path %>/public;
    access_log /var/log/nginx/<%= application %>_access.log;
    rewrite_log on;

    try_files $uri/index.html $uri @unicorn;
    location @unicorn {
        #all requests are sent to the UNIX socket
        proxy_pass  http://unicorn;
        proxy_redirect     off;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
    }

    # if the request is for a static resource, nginx should serve it directly
    # and add a far future expires header to it, making the browser
    # cache the resource and navigate faster over the website
    # this probably needs some work with Rails 3.1's asset pipe_line
    location ~ ^/(images|javascripts|stylesheets|system|spree)/  {
      root <%= current_path %>/public;
      expires max;
      break;
    }

    location ~ ^/assets/ {
            root <%= current_path %>/public;
      expires 1y;
      add_header Cache-Control public;

      add_header ETag "";
      break;
    }
}
